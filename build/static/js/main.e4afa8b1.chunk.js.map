{"version":3,"sources":["components/Contacts/Contacts.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","actions","handleSubmit","createAction","deleteContact","inputChange","contactReducer","createReducer","state","payload","filter","contacts","id","includes","inputValueReducer","_","combineReducers","contact","inputValue","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Form","submit","useState","name","setName","number","setNumber","reset","handleInputChange","e","currentTarget","value","onSubmit","shortid","generate","preventDefault","className","s","form","label","type","input","onChange","pattern","title","required","button","Filter","filterInput","filterValue","Contact","item","onClick","Contacts","list","map","contactid","connect","dispatch","event","data","find","toLowerCase","defaultModules","set","PNotifyMobile","alert","text","length","normalizedFilter","visiblecontact","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e4afa8b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2JYpv\",\"item\":\"Contacts_item__2zU8h\",\"button\":\"Contacts_button__2DYr3\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst handleSubmit = createAction('contact/Submit');\r\n\r\nconst deleteContact = createAction('contact/Delete');\r\n\r\nconst inputChange = createAction('contact/inputChange');\r\n\r\nconst actions = { handleSubmit, deleteContact, inputChange };\r\nexport default actions;","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst contactReducer = createReducer([], {\r\n    [actions.handleSubmit]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) => state.filter((contacts) => !contacts.id.includes(payload))\r\n})\r\n\r\nconst inputValueReducer = createReducer(\"\", {\r\n    [actions.inputChange]: (_, { payload }) => payload\r\n})\r\n\r\nexport default combineReducers({\r\n    contact: contactReducer,\r\n    inputValue: inputValueReducer\r\n})","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport logger from 'redux-logger';\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist: ['inputValue']\r\n};\r\nconst middleware = (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: { ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]}\r\n}).concat(logger);\r\n\r\nconst store = configureStore({\r\n    reducer: persistReducer(persistConfig, phonebookReducer),\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./Form.module.css\";\n\nexport default function Form({ submit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const formsubmit = (e) => {\n    const id = shortid.generate();\n    e.preventDefault();\n    reset();\n    submit({ name: name, number: number, id: id });\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  return (\n    <form onSubmit={formsubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={s.input}\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Submit\n      </button>\n    </form>\n  );\n}\n","export default function Filter({ filterInput, filterValue }) {\n  return (\n    <label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={filterInput}\n      ></input>\n    </label>\n  );\n}\n","import s from \"./Contacts.module.css\";\n\nexport default function Contact({ contact, deleteContact }) {\n  return (\n    <li className={s.item}>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n      <button\n        type=\"button\"\n        className={s.button}\n        id={contact.id}\n        onClick={() => deleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n","import Contact from \"./Contact\";\nimport shortid from \"shortid\";\nimport s from \"./Contacts.module.css\";\n\nexport default function Contacts({ contacts, deleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => {\n        let contactid = shortid.generate();\n        return (\n          <Contact\n            key={contactid}\n            contact={contact}\n            deleteContact={deleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n","\nimport { alert, defaultModules } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\nimport { connect } from 'react-redux';\nimport actions from './redux/phonebook/phonebook-actions';\n\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport Contacts from \"./components/Contacts/Contacts\";\n\nimport \"./App.css\";\n\nfunction App({ contacts, inputValue, handleSubmit, deleteContact, inputChange }) {\n\n  // useEffect(() => {\n  //   const localState = JSON.parse(localStorage.getItem(\"Contacts\"));\n  //   if (localState) {\n  //     setContacts(localState);\n  //   } else {\n  //     return;\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"Contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const filterleInputChange = (e) => {\n  //   const { value } = e.currentTarget;\n  //   setFilter(value);\n  // };\n\n  const submit = (data) => {\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === data.name.toLowerCase()\n      )\n    ) {\n      defaultModules.set(PNotifyMobile, {});\n      alert({\n        text: `${data.name} is olready in contacts`,\n      });\n    } else {\n      handleSubmit(data);\n    }\n  };\n\n  // const deleteContact = (id) => {\n  //   const visiblecontact = contacts.filter(\n  //     (contacts) => !contacts.id.includes(id)\n  //   );\n  //   setContacts(visiblecontact);\n  // };\n\n  const visiblecontact = () => {\n    const normalizedFilter = inputValue.toLowerCase();\n    if(contacts.length === 0){return} else {return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );}\n    \n  };\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <Form submit={submit} />\n      <h2>Contacts</h2>\n      {contacts.length === 0 ? null : (\n        <Filter filterInput={inputChange} filterValue={inputValue} />\n      )}\n      {contacts.length === 0 ? (\n        <p>No Contacts</p>\n      ) : (\n        <Contacts contacts={visiblecontact()} deleteContact={deleteContact} />\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n    contacts: state.contact,\n    inputValue: state.inputValue,\n});\nconst mapDispatchToProps = dispatch => ({\n    handleSubmit: (value) => dispatch(actions.handleSubmit(value)),\n    deleteContact: (id) => dispatch(actions.deleteContact(id)),\n    inputChange: (event) => dispatch(actions.inputChange(event.currentTarget.value))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from \"react\";\nimport \"modern-normalize/modern-normalize.css\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from './redux/store';\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__KD5TJ\",\"label\":\"Form_label__28DrN\",\"input\":\"Form_input__2Hi5C\",\"button\":\"Form_button__2RvxH\"};"],"sourceRoot":""}